<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.alex.blog.mapper.BlogArticleCollectMapper" >
	<!-- Base Result Map-->
	<resultMap id="BaseResultMap" type="com.alex.blog.model.BlogArticleCollect" >
		<result column="id" property="id"/>
		<result column="article_id" property="articleId"/>
		<result column="user_id" property="userId"/>
		<result column="create_time" property="createTime"/>
	</resultMap>

	<!-- Extend Result Map-->
	<resultMap id="extendResultMap" extends="BaseResultMap" type="com.alex.blog.model.BlogArticleCollect">
	</resultMap>
       
	<!-- blog_article_collect table all fields -->
	<sql id="Base_Column_List" >
		a.id,a.article_id,a.user_id,a.create_time
	</sql>

	<sql id="Extend_Column_List" >
		a.*
	</sql>
   
	<!-- 基本查询条件 -->
	<sql id="Example_Where_Clause">
		<where>
			<trim  suffixOverrides="," >
				<if test="id != null" > and id =  #{id}</if>
				<if test="articleId != null" > and article_id =  #{articleId}</if>
				<if test="userId != null" > and user_id =  #{userId}</if>
				<if test="createTime != null" > and create_time =  #{createTime}</if>
			</trim>
		</where>
	</sql>
   
	<!-- 插入记录 -->
	<insert id="save" parameterType="com.alex.blog.model.BlogArticleCollect" useGeneratedKeys="true" keyProperty="id" >
		insert into blog_article_collect( 
		<trim  suffixOverrides="," >
			<if test="articleId != null">article_id,</if>
			<if test="userId != null">user_id,</if>
			<if test="createTime != null">create_time,</if>
		</trim>
		) values(
		<trim  suffixOverrides="," >
			<if test="articleId != null">#{articleId},</if>
			<if test="userId != null">#{userId},</if>
			<if test="createTime != null">now(),</if>
		</trim>
		)
	</insert>
	
	<!-- 批量插入记录 -->
	<insert id="saveBatch" parameterType="java.util.List">
    	insert into blog_article_collect(
			id,article_id,user_id,create_time
		) values
		<foreach collection="list" item="item" index="index" separator=",">
			(#{item.id},#{item.articleId},#{item.userId},#{item.createTime})
		</foreach>  
  	</insert>

	<!-- 根据id，修改记录-->  
	<update id="update" parameterType="com.alex.blog.model.BlogArticleCollect" >
		update blog_article_collect 
		set article_id=#{articleId},user_id=#{userId},create_time=now() 
		where id=#{id}
	</update>
 
	<!-- 修改记录，只修改只不为空的字段 -->
	<update id="updateSelective" parameterType="com.alex.blog.model.BlogArticleCollect" >
		update blog_article_collect set 
		<trim  suffixOverrides="," >
			<if test="articleId != null "> article_id=#{articleId},</if>
			<if test="userId != null "> user_id=#{userId},</if>
			<if test="createTime != null "> create_time=#{createTime},</if>
		</trim>
		where id=#{id}
	</update>

	<!-- 修改记录，只修改只不为空的字段 -->
	<update id="updateQuery" >
		update blog_article_collect set 
		<trim  suffixOverrides="," >
			<if test="entity.articleId != null "> article_id=#{entity.articleId},</if>
			<if test="entity.userId != null "> user_id=#{entity.userId},</if>
			<if test="entity.createTime != null "> create_time=#{entity.createTime},</if>
		</trim>
	</update>

	<!-- 删除记录 -->
	<delete id="delete" parameterType="Object">
		delete from blog_article_collect
		where id = #{id}
	</delete>
	
	<!-- 按id批量删除记录 -->
	<delete id="deleteBatchIds">
		delete from blog_article_collect
		<where>
			id in
			<foreach item="item" index="index" collection="array" open="(" separator="," close=")">
				#{item}
			</foreach>
		</where>
	</delete>
	
	<!-- 按条件批量删除记录 -->
	<delete id="deleteBatch" parameterType = "com.alex.blog.model.BlogArticleCollect">
		delete from blog_article_collect
		<include refid="Example_Where_Clause"/> 
	</delete>


	<!-- 根据id查询 ${codeName} -->
	<select id="queryId"  resultMap="BaseResultMap" parameterType="Object">
		select 
			 <include refid="Base_Column_List" /> 
		from blog_article_collect a
		WHERE a.id = #{id}
	</select>

</mapper>   
